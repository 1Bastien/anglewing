name: Build and Release Tauri App

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Windows dependencies
        if: matrix.platform == 'windows-latest'
        run: |
          echo "Setting up Windows build environment..."

      - name: macOS dependencies
        if: matrix.platform == 'macos-latest'
        run: |
          echo "Setting up macOS build environment..."

      - name: Linux deps
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      # Check dependencies for Linux explicitly to catch any issues
      - name: Check Linux dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          echo "Checking Linux dependencies..."
          dpkg -l | grep -E 'libwebkit2gtk|libgtk-3|libayatana-appindicator3|librsvg2'
          ls -la /usr/lib/*/libwebkit2gtk*
          echo "Current directory structure:"
          ls -la

      - name: Create public directory structure
        run: |
          mkdir -p public/animations
          mkdir -p public/backgrounds
          echo '{"animations": [], "backgrounds": []}' > public/config.json
          ls -la public

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "Anglewing v${{ github.ref_name }}"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          packageManager: pnpm

      - name: Copy platform resources (Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          mkdir -p src-tauri/target/release/bundle/resources/public/animations
          mkdir -p src-tauri/target/release/bundle/resources/public/backgrounds
          cp -r public/* src-tauri/target/release/bundle/resources/public/ || echo "No public directory found"

      - name: Copy platform resources (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          mkdir -p src-tauri/target/release/bundle/macos/Anglewing.app/Contents/Resources/public/animations
          mkdir -p src-tauri/target/release/bundle/macos/Anglewing.app/Contents/Resources/public/backgrounds
          cp -r public/* src-tauri/target/release/bundle/macos/Anglewing.app/Contents/Resources/public/ || echo "No public directory found"

      - name: Copy platform resources (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          mkdir -p src-tauri/target/release/bundle/appimage/resources/public/animations
          mkdir -p src-tauri/target/release/bundle/appimage/resources/public/backgrounds
          cp -r public/* src-tauri/target/release/bundle/appimage/resources/public/ || echo "No public directory found"
          mkdir -p src-tauri/target/release/bundle/deb/data/usr/share/applications/Anglewing/resources/public/
          cp -r public/* src-tauri/target/release/bundle/deb/data/usr/share/applications/Anglewing/resources/public/ || echo "No public directory found"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-artifacts
          path: src-tauri/target/release/bundle/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/**/*.*
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
